{"version":3,"file":"index.js","sources":["src/parse-path.js","src/index.js"],"sourcesContent":["export function parsePath(path) {\n  var pathname = path || `/`\n  var search = ``\n  var hash = ``\n\n  var hashIndex = pathname.indexOf(`#`)\n  if (hashIndex !== -1) {\n    hash = pathname.substr(hashIndex)\n    pathname = pathname.substr(0, hashIndex)\n  }\n\n  var searchIndex = pathname.indexOf(`?`)\n  if (searchIndex !== -1) {\n    search = pathname.substr(searchIndex)\n    pathname = pathname.substr(0, searchIndex)\n  }\n\n  return {\n    pathname: pathname,\n    search: search === `?` ? `` : search,\n    hash: hash === `#` ? `` : hash,\n  }\n}\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Link, Location } from \"@reach/router\"\nimport { resolve } from \"@reach/router/lib/utils\"\n\nimport { parsePath } from \"./parse-path\"\n\nexport { parsePath }\n\nconst isAbsolutePath = path => path.startsWith(`/`)\n\nexport function withPrefix(path, prefix = ``) {\n  if (!isLocalLink(path)) {\n    return path\n  }\n\n  if (path.startsWith(`./`) || path.startsWith(`../`)) {\n    return path\n  }\n  const base = prefix ?? `` ?? `/`\n\n  return `${base?.endsWith(`/`) ? base.slice(0, -1) : base}${\n    path.startsWith(`/`) ? path : `/${path}`\n  }`\n}\n\nconst isLocalLink = path =>\n  !path.startsWith(`http://`) &&\n  !path.startsWith(`https://`) &&\n  !path.startsWith(`//`)\n\nexport function withAssetPrefix(path) {\n  return withPrefix(path, ``)\n}\n\nfunction absolutify(path, current) {\n  // If it's already absolute, return as-is\n  if (isAbsolutePath(path)) {\n    return path\n  }\n  return resolve(path, current)\n}\n\nconst rewriteLinkPath = (path, relativeTo) => {\n  if (!isLocalLink(path)) {\n    return path\n  }\n  return isAbsolutePath(path) ? withPrefix(path) : absolutify(path, relativeTo)\n}\n\nconst NavLinkPropTypes = {\n  activeClassName: PropTypes.string,\n  activeStyle: PropTypes.object,\n  partiallyActive: PropTypes.bool,\n}\n\n// Set up IntersectionObserver\nconst createIntersectionObserver = (el, cb) => {\n  const io = new window.IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el)\n          io.disconnect()\n          cb()\n        }\n      }\n    })\n  })\n  // Add element to the observer\n  io.observe(el)\n  return { instance: io, el }\n}\n\nclass GatsbyLink extends React.Component {\n  constructor(props) {\n    super(props)\n    // Default to no support for IntersectionObserver\n    let IOSupported = false\n    if (typeof window !== `undefined` && window.IntersectionObserver) {\n      IOSupported = true\n    }\n\n    this.state = {\n      IOSupported,\n    }\n    this.handleRef = this.handleRef.bind(this)\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue(\n        parsePath(rewriteLinkPath(this.props.to, window.location.pathname))\n          .pathname\n      )\n    }\n  }\n\n  componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue(\n        parsePath(rewriteLinkPath(this.props.to, window.location.pathname))\n          .pathname\n      )\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this.io) {\n      return\n    }\n    const { instance, el } = this.io\n\n    instance.unobserve(el)\n    instance.disconnect()\n  }\n\n  handleRef(ref) {\n    if (this.props.innerRef && this.props.innerRef.hasOwnProperty(`current`)) {\n      this.props.innerRef.current = ref\n    } else if (this.props.innerRef) {\n      this.props.innerRef(ref)\n    }\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      this.io = createIntersectionObserver(ref, () => {\n        ___loader.enqueue(\n          parsePath(rewriteLinkPath(this.props.to, window.location.pathname))\n            .pathname\n        )\n      })\n    }\n  }\n\n  defaultGetProps = ({ isPartiallyCurrent, isCurrent }) => {\n    if (this.props.partiallyActive ? isPartiallyCurrent : isCurrent) {\n      return {\n        className: [this.props.className, this.props.activeClassName]\n          .filter(Boolean)\n          .join(` `),\n        style: { ...this.props.style, ...this.props.activeStyle },\n      }\n    }\n    return null\n  }\n\n  render() {\n    const {\n      to,\n      getProps = this.defaultGetProps,\n      onClick,\n      onMouseEnter,\n      /* eslint-disable no-unused-vars */\n      activeClassName: $activeClassName,\n      activeStyle: $activeStyle,\n      innerRef: $innerRef,\n      partiallyActive,\n      state,\n      replace,\n      /* eslint-enable no-unused-vars */\n      ...rest\n    } = this.props\n    if (process.env.NODE_ENV !== `production` && !isLocalLink(to)) {\n      console.warn(\n        `External link ${to} was detected in a Link component. Use the Link component only for internal links. See: https://gatsby.dev/internal-links`\n      )\n    }\n\n    return (\n      <Location>\n        {({ location }) => {\n          const prefixedTo = rewriteLinkPath(to, location.pathname)\n          return isLocalLink(prefixedTo) ? (\n            <Link\n              to={prefixedTo}\n              state={state}\n              getProps={getProps}\n              innerRef={this.handleRef}\n              onMouseEnter={e => {\n                if (onMouseEnter) {\n                  onMouseEnter(e)\n                }\n                ___loader.hovering(parsePath(prefixedTo).pathname)\n              }}\n              onClick={e => {\n                if (onClick) {\n                  onClick(e)\n                }\n\n                if (\n                  e.button === 0 && // ignore right clicks\n                  !this.props.target && // let browser handle \"target=_blank\"\n                  !e.defaultPrevented && // onClick prevented default\n                  !e.metaKey && // ignore clicks with modifier keys...\n                  !e.altKey &&\n                  !e.ctrlKey &&\n                  !e.shiftKey\n                ) {\n                  e.preventDefault()\n\n                  let shouldReplace = replace\n                  const isCurrent =\n                    encodeURI(prefixedTo) === window.location.pathname\n                  if (typeof replace !== `boolean` && isCurrent) {\n                    shouldReplace = true\n                  }\n                  // Make sure the necessary scripts and data are\n                  // loaded before continuing.\n                  window.___navigate(prefixedTo, {\n                    state,\n                    replace: shouldReplace,\n                  })\n                }\n\n                return true\n              }}\n              {...rest}\n            />\n          ) : (\n            <a href={prefixedTo} {...rest} />\n          )\n        }}\n      </Location>\n    )\n  }\n}\n\nGatsbyLink.propTypes = {\n  ...NavLinkPropTypes,\n  onClick: PropTypes.func,\n  to: PropTypes.string.isRequired,\n  replace: PropTypes.bool,\n  state: PropTypes.object,\n}\n\nconst showDeprecationWarning = (functionName, altFunctionName, version) =>\n  console.warn(\n    `The \"${functionName}\" method is now deprecated and will be removed in Gatsby v${version}. Please use \"${altFunctionName}\" instead.`\n  )\n\nexport default React.forwardRef((props, ref) => (\n  <GatsbyLink innerRef={ref} {...props} />\n))\n\nexport const navigate = (to, options) => {\n  window.___navigate(rewriteLinkPath(to, window.location.pathname), options)\n}\n\nexport const push = to => {\n  showDeprecationWarning(`push`, `navigate`, 3)\n  window.___push(rewriteLinkPath(to, window.location.pathname))\n}\n\nexport const replace = to => {\n  showDeprecationWarning(`replace`, `navigate`, 3)\n  window.___replace(rewriteLinkPath(to, window.location.pathname))\n}\n\n// TODO: Remove navigateTo for Gatsby v3\nexport const navigateTo = to => {\n  showDeprecationWarning(`navigateTo`, `navigate`, 3)\n  return push(to)\n}\n"],"names":["parsePath","path","pathname","search","hash","hashIndex","indexOf","substr","searchIndex","isAbsolutePath","startsWith","withPrefix","prefix","isLocalLink","base","endsWith","slice","withAssetPrefix","rewriteLinkPath","relativeTo","current","resolve","absolutify","NavLinkPropTypes","activeClassName","PropTypes","string","activeStyle","object","partiallyActive","bool","GatsbyLink","props","_this","defaultGetProps","isPartiallyCurrent","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","componentDidUpdate","prevProps","prevState","this","to","___loader","enqueue","location","componentDidMount","componentWillUnmount","io","instance","unobserve","el","disconnect","ref","cb","innerRef","hasOwnProperty","_this2","entries","forEach","entry","target","isIntersecting","intersectionRatio","observe","render","getProps","onClick","onMouseEnter","replace","rest","process","env","NODE_ENV","console","warn","Location","prefixedTo","h","Link","_this3","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","shouldReplace","encodeURI","___navigate","href","React","Component","propTypes","func","isRequired","showDeprecationWarning","functionName","altFunctionName","version","forwardRef","navigate","options","push","___push","___replace","navigateTo"],"mappings":"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"}